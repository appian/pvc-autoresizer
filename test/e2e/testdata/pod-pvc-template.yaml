kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .pvcName }}
  namespace: {{ .namespace }}
{{ if .useLabel }}
  labels:
    {{ range $key, $value := .labels }}
    {{ $key }}: {{ $value }}
    {{ end }}
{{ end }}
  annotations:
    resize.topolvm.io/threshold: "{{ .thresholdAnnotation }}"
    resize.topolvm.io/increase: "{{ .increaseAnnotation }}"
    resize.topolvm.io/min-increase: "{{ .minimumIncreaseAnnotation }}"
    resize.topolvm.io/max-increase: "{{ .maximumIncreaseAnnotation }}"
    resize.topolvm.io/inodes-threshold: "{{ .inodesThresholdAnnotation }}"
    resize.topolvm.io/storage_limit: "{{ .storageLimitAnnotation }}"
    resize.topolvm.io/initial-resize-group-by: "{{ .initialResizeGroupByAnnotation }}"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .resourceRequest }}
  storageClassName: {{ .storageClassName }}
  volumeMode: {{ .volumeMode }}
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ .pvcName }}
  namespace: {{ .namespace }}
  labels:
    app.kubernetes.io/name: ubuntu
spec:
  containers:
    - name: ubuntu
      image: ubuntu:22.04
      command:
        - bash
        - -c
        - |
          sleep inf &
          trap "kill -SIGTERM $!" SIGTERM
          wait $!
          exit
{{ if eq .volumeMode "Block" }}
      volumeDevices:
        - name: my-volume
          devicePath: /dev/e2etest
{{ else }}
      volumeMounts:
        - mountPath: /test1
          name: my-volume
{{ end }}
  volumes:
    - name: my-volume
      persistentVolumeClaim:
        claimName: {{ .pvcName }}
